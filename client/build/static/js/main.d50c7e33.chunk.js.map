{"version":3,"sources":["components/Grid/Grid.js","components/AuthHelperMethods.js","components/FormLogin/FormLogin.js","components/NavHome/NavHome.js","pages/Home/Home.js","components/Calendar/Calendar.js","components/NavDoctor/NavDoctor.js","pages/DoctorProfile/DoctorProfile.js","components/List/List.js","utils/API.js","components/Card/Card.js","pages/PatientList/PatientList.js","components/NavPatient/NavPatient.js","components/withAuth.js","pages/PatientProfile/PatientProfile.js","components/CalendarAppt/CalendarAppt.js","components/FormAppt/FormAppt.js","components/Footer/Footer.js","pages/NewAppt/NewAppt.js","components/Sidebar/Sidebar.js","pages/PatientFile/PatientFile.js","pages/PatientTests/PatientTests.js","pages/PatientMedications/PatientMedications.js","pages/PatientCalendar/PatientCalendar.js","pages/PatientProxies/PatientProxies.js","App.js","serviceWorker.js","index.js","components/NavHome/logo.png","pages/Home/case3.png","components/NavDoctor/logo.png","components/NavPatient/logo.png","pages/PatientProfile/ins2.png"],"names":["Container","_ref","fluid","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","split","map","join","AuthHelperMethods","login","email","password","_this","fetch","method","body","JSON","stringify","then","res","setToken","token","setPatient","patient","Promise","resolve","loggedIn","getToken","isTokenExpired","decode","exp","Date","now","err","console","log","localStorage","setItem","getPatient","parse","getItem","idToken","logout","removeItem","getConfirm","answer","url","options","headers","Accept","Content-Type","Object","objectSpread","_checkStatus","response","json","status","error","Error","statusText","Login","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Auth","handleInputChange","event","_event$target","target","value","name","setState","defineProperty","handleFormSubmit","preventDefault","state","alert","history","replace","catch","onSubmit","handleSubmit","onChange","type","placeholder","onClick","Component","withRouter","NavHome","handleLogout","href","FormLogin_FormLogin","src","logo","renderLoginForm","Home","components_NavHome_NavHome","id","home","alt","CalendarEx","date","entry_nostyle_default","NavDoctor","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","DoctorProfile","components_NavDoctor_NavDoctor","aria-hidden","Calendar_Calendar","List","ListItem","API","saveAppt","apptData","axios","post","getPatients","get","searchFile","search","getAppts","Card","heading","cardStyle","height","width","margin","float","marginBottom","currPatient","PatientList","patients","loadPatients","data","length","List_List","components_Card_Card","style","key","_id","navItem","color","NavPatient","withAuth","AuthComponent","_Component","AuthWrapped","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","confirm","loaded","inherits","createClass","oldmeds","background","currentmeds","cardImage","PatientProfile","appointments","_this2","components_NavPatient_NavPatient","item","index","dist_default","format","subject","duration","skypeUrl","Doctor","firstName","lastName","doctype","scope","insimage","CalendarAppt","entry_default","Form","reason","doctor_id","calendarChange","inputFieldId","inputFieldValue","handleselectedOption","currentTarget","handleDoctorOption","handleDurationOption","patient_id","components_CalendarAppt_CalendarAppt","doctors","Footer","NewAppt","FormAppt_FormAppt","components_Footer_Footer","Sidebar","PatientFile","components_Sidebar_Sidebar","PatientTests","PatientMedications","PatientCalendar","PatientProxies","App","BrowserRouter","Switch","Route","exact","path","component","SignUp","Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d50c7e33.chunk.js","sourcesContent":["import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import decode from \"jwt-decode\";\n\nexport default class AuthHelperMethods {\n    login = (email, password) => {\n        return this.fetch('/api/patients/login', {\n            method: 'POST',\n            body: JSON.stringify({email, password})\n        }).then(res => {\n            this.setToken(res.token);\n            this.setPatient(res.patient);\n            return Promise.resolve(res);\n        });\n    };\n\n    loggedIn = () => {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken(); // Getting token from localstorage\n        return !!token && !this.isTokenExpired(token);\n    };\n\n    isTokenExpired = token => {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) {\n                // Checking if token is expired.\n                return true;\n            } else return false;\n        } catch (err) {\n            console.log(\"expired check failed! Line 42: AuthService.js\");\n            return false;\n        }\n    };\n\n    setPatient = patient => {\n        localStorage.setItem(\"patient\", JSON.stringify(patient));\n    };\n\n    getPatient = () => {\n        var patient = JSON.parse(localStorage.getItem(\"patient\"));\n        if (!patient) {\n            console.log(\"no patient\");\n        }\n        return patient;\n    };\n\n    setToken = idToken => {\n        // Saves user token to localStorage\n        localStorage.setItem(\"id_token\", idToken);\n    };\n\n    getToken = () => {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem(\"id_token\");\n    };\n\n    logout = () => {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem(\"id_token\");\n    };\n\n    getConfirm = () => {\n        // Using jwt-decode npm package to decode the token\n        let answer = decode(this.getToken());\n        //player = answer;\n        console.log(\"Recieved answer!\");\n        return answer;\n    };\n\n    fetch = (url, options) => {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        };\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        if (this.loggedIn()) {\n            headers[\"Authorization\"] = \"Bearer \" + this.getToken();\n        }\n\n        return fetch(url, {\n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json());\n    };\n\n    _checkStatus = response => {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) {\n            // Success status lies between 200 to 300\n            return response;\n        } else {\n            var error = new Error(response.statusText);\n            error.response = response;\n            throw error;\n        }\n    };\n}\n","import React, {Component} from \"react\";\nimport {Route, withRouter} from 'react-router-dom';\nimport \"./FormLogin.css\";\nimport AuthHelperMethods from '../../components/AuthHelperMethods';\n\nclass Login extends Component {\n    Auth = new AuthHelperMethods();\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        };\n    }\n\n    handleInputChange = (event) => {\n        const {value, name} = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        // Preventing the default behavior of the form submit (which is to refresh the page)\n        event.preventDefault();\n        if (!this.state.email) {\n            alert(\"Please enter your email\");\n        } else if (!this.state.password) {\n            alert(\"Please enter your password\");\n        } else {\n            this.Auth.login(\n                this.state.email,\n                this.state.password\n            ).then(res => {\n                if (res === false) {\n                    console.log(res);\n                    return alert(\"Sorry those credentials don't exist!\");\n                }\n                this.props.history.replace('/patient');\n            }).catch(err => {\n                alert(err);\n            });\n        }\n    };\n\n    render() {\n\n        return (\n        <div>\n            <div className=\"form-group\">\n\n                <form className=\"form-inline\" onSubmit={this.handleSubmit}>\n                    {/* <label>\n                        <input\n                         type=\"text\"\n                         value={this.state.value}\n                        onChange={this.handleChange}\n                        placeholder=\"Name\"\n                        />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\"/> */}\n                \n                    <input\n                        value={this.state.email}\n                        name=\"email\"\n                        onChange={this.handleInputChange}\n                        type=\"text\"\n                        placeholder=\"Email\"\n                    />\n                    <input\n                        value={this.state.password}\n                        name=\"password\"\n                        onChange={this.handleInputChange}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                    <button onClick={this.handleFormSubmit}>Login</button>\n                </form>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default withRouter(Login);\n","import React, {Component} from \"react\";\nimport FormLogin from \"../FormLogin/FormLogin\";\nimport AuthHelperMethods from '../../components/AuthHelperMethods';\nimport \"./NavHome.css\";\nimport logo from \"./logo.png\";\n\nclass NavHome extends Component {\n    Auth = new AuthHelperMethods();\n\n    handleLogout = () => {\n        this.Auth.logout();\n        this.props.history.replace('/');\n    };\n\n    renderLoginForm() {\n        if (this.Auth.loggedIn()) {\n            return (\n                <div className=\"right\">\n                    <a href=\"/patient/\">Profile</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <a href=\"/\" onClick={this.handleLogout}>Logout</a>\n                </div>\n            )\n        } else {\n            return (\n                <FormLogin/>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n            <nav className=\"navbar sticky-top navbar-expand-lg navbar-dark justify-content-between\">\n                <div>\n                    <img className =\"homeimg rounded-circle\" src= {logo}></img>\n                    <a className=\"navbar-brand\" href=\"/\">\n                        <div className=\"ourname\">UCare</div>\n                    </a>\n                </div>\n                {this.renderLoginForm()}\n            </nav>\n            </div>\n        );\n    }\n};\n\nexport default NavHome;","import React, { Component} from \"react\";\nimport { Col, Row, Container } from \"../../components/Grid/Grid\";\nimport NavHome from \"../../components/NavHome/NavHome\";\n// import Footer from \"../../components/Footer/Footer\";\nimport home from \"./case3.png\";\nimport \"./Home.css\"\n\n\n\nclass Home extends Component {\n\n  render() {\n    return (\n      \n  <div>\n        <NavHome />\n        \n\n        <Container fluid>\n\n        <Row>\n          <Col size=\"6\">\n            <img id=\"googlephoto\" src={home} alt =\"UCare\"/>\n          </Col>\n          <Col size=\"4\">\n            <div>\n              <p>\n              UCARE is a platform that aims to bring transparency and accessibility to patients, effieciency and organization to healthcare professionals, and the modern web to the healthcare system.\n              </p>\n            </div>\n          </Col>\n        </Row>\n\n       </Container>\n\n       {/* <Footer /> */}\n       <footer className=\"page-footer font-small blue\">\n          <div className=\"footer-copyright text-center py-3\">© 2018 UCARE\n            {/* <a href=\"https://mdbootstrap.com/education/bootstrap/\"> MDBootstrap.com</a> */}\n          </div>\n        </footer>   \n    </div>\n    );\n  }\n}\n\nexport default Home;\n","import Calendar from 'react-calendar/dist/entry.nostyle';\n// import React from \"react\";\nimport React, { Component} from \"react\";\nimport \"./Calendar.css\";\n\nclass CalendarEx extends Component {\n  state = {\n    date: new Date(),\n  }\n \n  onChange = date => this.setState({ date })\n \n  render() {\n    return (\n      <div>\n        <Calendar\n          onChange={this.onChange}\n          value={this.state.date}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CalendarEx;","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport logo from \"./logo.png\";\n\nclass NavDoctor extends Component {\n    render() {\n        return (\n            <div>\n            <nav className=\"navbar sticky-top navbar-expand-lg\">\n            \n            <img className =\"homeimg rounded-circle\" src= {logo}></img>\n                <a className=\"navbar-brand\" href=\"/\">\n                    <div className=\"ourname\">\n                    UCare\n                    </div>\n                </a>\n\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n        <a className=\"nav-link\" href=\"/patientlist\">Patient Files <span className=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Link</a>\n      </li>\n      <li className=\"nav-item dropdown\">\n        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Dropdown\n        </a>\n        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <a className=\"dropdown-item\" href=\"#\">Action</a>\n          <a className=\"dropdown-item\" href=\"#\">Another action</a>\n          <div className=\"dropdown-divider\"></div>\n          <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n        </div>\n      </li>\n    </ul>\n    <form className=\"form-inline my-2 my-lg-0\">\n      <input className=\"form-control mr-sm-2\" type=\"search\" aria-label=\"Search\"></input>\n      <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n    </form>\n  </div>\n</nav>\n\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(NavDoctor);\n","import React from \"react\";\nimport \"./DoctorProfile.css\";\nimport CalendarEx from \"../../components/Calendar/Calendar\";\nimport NavDoctor from \"../../components/NavDoctor/NavDoctor\";\nimport { Col, Row, Container } from \"../../components/Grid/Grid\";\nimport Wrapper from \"../../components/Wrapper/Wrapper\";\n// import Footer from \"../../components/Footer/Footer\";\n\n\n\nfunction DoctorProfile(props) {\n    \n    return (\n    <div>\n                <NavDoctor />\n            <Container fluid>\n              <Row>\n                <Col size=\"2\">\n                    <div className=\"list-group\">\n                    <a className=\"list-group-item\" href=\"#\"><i className=\"fas fa-notes-medical fa-2x\" aria-hidden=\"true\"></i>&nbsp; Doctor's Note</a>\n                    <a className=\"list-group-item\" href=\"#\"><i className=\"fas fa-book-medical fa-2x\" aria-hidden=\"true\"></i>&nbsp; Search Medicine</a>\n                    <a className=\"list-group-item\" href=\"#\"><i className=\"fas fa-book-medical fa-2x\" aria-hidden=\"true\"></i>&nbsp; Applications</a>\n                    <a className=\"list-group-item\" href=\"#\"><i className=\"fas fa-cog fa-2x\" aria-hidden=\"true\"></i>&nbsp;Settings</a>\n                    </div>\n                </Col>\n\n                <Col size=\"10\">\n                    <CalendarEx />\n                </Col>\n\n              </Row>\n            </Container>\n    </div>\n    );\n}\n\nexport default DoctorProfile;\n","import React from \"react\";\nimport \"./List.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n\n","import axios from \"axios\";\n\nexport default {\n\n  //HOME PAGE\n\n  //save new appointment to database\n  saveAppt: function(apptData, id) {\n    return axios.post(\"/api/patients/\" + id, apptData);\n  },\n  // Gets list all of the patients\n  getPatients: function(patient) {\n    return axios.get(\"/api/doctor/patients/\" + patient);\n  },\n  // Gets a patient file\n  getPatient: function(id) {\n    return axios.get(\"/api/patients/\" + id);\n  },\n   // returns a search\n   searchFile: function(search) {\n    return axios.get(\"/api/search/\");\n  },\n\n  // route for returning json of player's appointments\n  getAppts: function(patient){\n    return axios.get(\"/api/appointments/\"+ patient.id);\n  }\n\n};\n","import React from \"react\";\nimport \"./Card.css\";\n\nfunction Card(props) {\n  return (\n    <div>\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n        <h2>{props.heading}</h2>\n      </div>\n      <div className=\"card-body\">{props.children}</div>\n    </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import { List, ListItem } from \"../../components/List/List\";\nimport { Col, Row, Container } from \"../../components/Grid/Grid\";\nimport React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport \"./PatientList.css\";\n\nimport Card from \"../../components/Card/Card\";\n\n\n//trying to get rounded card edges\nconst cardStyle = {\n  height: \"200px\",\n  width: \"600px\", \n  margin: \"0 auto\",\n  float: \"none\",\n  marginBottom: \"10px\"\n}\n\nvar currPatient = \"leo\";\nclass PatientList extends Component {\n    state = {\n      patients: [1, 2, 3, 4]\n    };\n\n    componentDidMount() {\n      console.log(\"hits patient list\");\n      this.loadPatients();\n      console.log(this.state.patients);\n     }\n  \n       loadPatients = () => {\n         API.getPatients(currPatient)\n           .then(res => this.setState({ patients: res.data })) \n           .catch(err => console.log(err));\n       }; \n    \n  \n    render() {\n      return (\n        <div>\n        <Container fluid>\n          <Row>\n            <Col size=\"md-6 sm-12\">\n\n              {this.state.patients.length ? (\n                <List>\n                  {this.state.patients.map(patient => (\n                    <Card style={cardStyle}>\n                    <ListItem key={patient._id}>\n                      <a href={\"/patient/\" + patient._id}>\n                        \n                          <strong>\n                          {patient.name} Test\n                        </strong>\n                      </a>\n                    </ListItem>\n                    </Card>\n                  ))}\n                </List>\n              ) : (\n                <h3>No Results to Display</h3>\n              )}\n            </Col>\n          </Row>\n        </Container>\n        </div>\n      );\n    }\n  }\n\n  export default PatientList;\n","import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport logo from \"./logo.png\";\nimport \"./NavPatient.css\"\nimport AuthHelperMethods from \"../AuthHelperMethods\";\nimport FormLogin from \"../FormLogin/FormLogin\";\n\nconst navItem = {\ncolor:\"red\"\n\n}\n\nclass NavPatient extends Component {\n    Auth = new AuthHelperMethods();\n\n    handleLogout = () => {\n        this.Auth.logout();\n        this.props.history.replace('/');\n    };\n\n    renderLoginForm() {\n        if (this.Auth.loggedIn()) {\n            return (\n                <div className=\"right\">\n                    <a href=\"/patient/\">Profile</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <a href=\"/\" onClick={this.handleLogout}>Logout</a>\n                </div>\n            )\n        } else {\n            return (\n                <FormLogin/>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n            <nav className=\"navbar sticky-top navbar-expand-lg\">\n            \n            <img className =\"homeimg rounded-circle\" src= {logo}></img>\n                <a className=\"navbar-brand\" href=\"/\">\n                    <div className=\"ourname\">\n                    UCare\n                    </div>\n                </a>\n\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto\" style={navItem}>\n      <li className=\"nav-item active\">\n        <a className=\"nav-link\" href={\"/patient/\" + this.Auth.getPatient().id + \"/history\"}>Patient File<span className=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"/newappt\">New Appointment</a>\n      </li>\n    </ul>\n      {this.renderLoginForm()}\n  </div>\n</nav>\n\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default withRouter(NavPatient);\n","import React, { Component } from \"react\";\nimport AuthHelperMethods from \"./AuthHelperMethods\";\n\n/* A higher order component is frequently written as a function that returns a class. */\n\nexport default function withAuth(AuthComponent) {\n    const Auth = new AuthHelperMethods();\n\n    return class AuthWrapped extends Component {\n        state = {\n            confirm: null,\n            loaded: false\n        };\n\n        /* In the componentDidmount, we would want to do a couple of important tasks in order to verify the current users authentication status\n        prior to granting them enterance into the app. */\n        componentDidMount() {\n            if (!Auth.loggedIn()) {\n                this.props.history.replace(\"/\");\n            } else {\n                /* Try to get confirmation message from the Auth helper. */\n                try {\n                    const confirm = Auth.getConfirm();\n                    console.log(\"confirmation is:\", confirm.email.split(\"@\")[0]);\n                    this.setState({\n                        confirm: confirm,\n                        loaded: true\n                    });\n                } catch (err) {\n                    /* Oh snap! Looks like there's an error so we'll print it out and log the user out for security reasons. */\n                    console.log(err);\n                    Auth.logout();\n                    this.props.history.replace(\"/\");\n                }\n            }\n        }\n\n        render() {\n            if (this.state.loaded == true) {\n                if (this.state.confirm) {\n                    console.log(\"confirmed!\");\n                    return (\n                        /* component that is currently being wrapper(App.js) */\n                        <AuthComponent\n                            history={this.props.history}\n                            confirm={this.state.confirm}\n                        />\n                    );\n                } else {\n                    console.log(\"not confirmed!\");\n                    return null;\n                }\n            } else {\n                return null;\n            }\n        }\n    };\n}\n","import React, { Component} from \"react\";\nimport Moment from 'react-moment';\nimport { Col, Row, Container } from \"../../components/Grid/Grid\";\nimport NavPatient from \"../../components/NavPatient/NavPatient\";\nimport withAuth from '../../components/withAuth';\nimport API from \"../../utils/API\"\nimport AuthHelperMethods from \"../../components/AuthHelperMethods\";\nimport Card from \"../../components/Card/Card\";\nimport insimage from \"./ins2.png\";\nimport \"./PatientProfile.css\"\n\n//necessary for pulling patient name out of entered email\n\nconst cardStyle =  {\n    height:\"400px\",\n    width:\"600px\"\n}\n\nconst oldmeds = {\n    background: \"#fcfc9c\"\n  }\n  \nconst currentmeds = {\n    background: \"#bdfcb3\"\n  }\n\n  const cardImage = {\n    width: \"300px\",\n    height: \"275px\"\n  }\n\n//   const testcontainer = { \n//     display: \"flex\"\n//   }\n\nclass PatientProfile extends Component {\n    Auth = new AuthHelperMethods();\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            appointments: []\n        };\n    }\n    \n    componentDidMount() {\n        console.log(this.Auth.getPatient());\n        API.getAppts(this.Auth.getPatient())\n        .then(response => {\n            console.log(response);\n            this.setState({appointments: response.data})\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <NavPatient />\n\n                    <Card heading= {\"Appointments\"}>\n                        <Container fluid>\n                            <Row className=\"row row-header\">\n                                <Col size=\"2\"><strong>Date</strong></Col>\n                                <Col size=\"3\"><strong>Reason</strong></Col>\n                                <Col size=\"2\"><strong>Duration</strong></Col>\n                                <Col size=\"2\"><strong>Video Call Link</strong></Col>\n                                <Col size=\"2\"><strong>Doctor</strong></Col>\n                            </Row>\n                      {\n                        this.state.appointments ? (\n\n                            this.state.appointments.map((item, index) => {\n                                return (\n                                    <Row key={index} className=\"dark-nav\">\n                                        <Col size=\"2\">\n                                            <Moment format=\"LLLL\">{item.date}</Moment>\n                                        </Col>\n                                        <Col size=\"3\">\n                                            {item.subject}\n                                        </Col>\n                                        <Col size=\"2\">\n                                            {item.duration}\n                                        </Col>\n                                        <Col size=\"2\">\n                                            <a href={item.skypeUrl} target=\"_blank\">Call</a>\n                                        </Col>\n                                        <Col size=\"2\">\n                                            {item.Doctor.firstName} {item.Doctor.lastName}, {item.Doctor.doctype}\n                                        </Col>\n\n                                    </Row>\n\n                                )\n                            })\n                        ) : null\n                    }\n                        </Container>\n                </Card>\n\n\n                \n                <Card heading= {\"Prescription Medications\"} >\n\n            <table className=\"table table-hover\">\n              <thead>\n                 <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Dosage</th>\n                    <th scope=\"col\">Reported Side Effects</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                <tr style={currentmeds}>\n                    <th scope=\"row\">1</th>\n                    <td>Acetaminophen</td>\n                    <td>800mg</td>\n                    <td>N/A</td>\n                </tr>\n                <tr style={currentmeds}>\n                    <th scope=\"row\">2</th>\n                    <td>Dextromethorphan</td>\n                    <td>500 mg/m²</td>\n                    <td>Drowsiness, vomitting</td>\n                </tr>\n                <tr style={oldmeds}>\n                    <th scope=\"row\">3</th>\n                    <td>Loratadine </td>\n                    <td>250 mg/m²</td>\n                    <td>Upset stomach</td>\n                </tr>\n              </tbody>\n            </table>\n                </Card>\n            \n            \n                <Card heading= {\"Insurance & Billing\"} >\n                <img id=\"insphoto\" src={insimage} style={cardImage} alt =\"insurance\"/>\n\n                </Card>\n                \n                </div>\n\n    \n        )\n    }\n}\n\nexport default withAuth(PatientProfile);\n","import React, { Component } from 'react';\nimport DateTimePicker from 'react-datetime-picker';\nimport './CalendarAppt.css';\n\nclass CalendarAppt extends Component {\n  state = {\n    value: new Date(),\n  };\n\n  onChange = value => {\n      this.setState({ value })\n      this.props.onChange(this.props.id , value);\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div className=\"Sample\">\n        <div className=\"Sample__container\">\n          {/* <main className=\"Sample__container__content\"> */}\n            <DateTimePicker\n              onChange={this.onChange}\n              value={value}\n            />\n          {/* </main> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CalendarAppt;","import React, {Component} from \"react\";\nimport \"./FormAppt.css\";\nimport Card from \"../../components/Card/Card\";\nimport {Col, Row, Container} from \"../../components/Grid/Grid\";\nimport CalendarAppt from \"../../components/CalendarAppt/CalendarAppt\"\nimport { withRouter } from 'react-router';\nimport AuthHelperMethods from \"../AuthHelperMethods\";\n\n\nconst testcontainer = { \n    display: \"flex\"\n  }\n\n\nclass Form extends Component {\n    Auth = new AuthHelperMethods();\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            patient_id: this.Auth.getPatient().id,\n            reason: \"\",\n            type: \"\",\n            doctor_id: \"\",\n            date: \"\",\n            duration: \"\"\n        };\n    }\n\n    handleInputChange = event => {\n        // Getting the value and name of the input which triggered the change\n        let value = event.target.value;\n        const name = event.target.name;\n\n        // Updating the input's state\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        fetch('/api/appointments', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(this.state)\n        }).then(data => {\n            this.props.history.replace(\"/patient\");\n            console.log(data);\n\n        });\n\n        this.setState({\n            reason: \"\",\n            type: \"\",\n            doctor_id: \"\",\n            date: \"\"\n        });\n    };\n\n    calendarChange = (inputFieldId , inputFieldValue) => {\n        this.setState({date: inputFieldValue});\n    };\n\n    handleselectedOption = event => {\n        this.setState({type: event.currentTarget.value});\n    };\n\n    handleDoctorOption = event => {\n        this.setState({doctor_id: event.target.value});\n    };\n\n    handleDurationOption = event => {\n        this.setState({duration: event.target.value});\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"card text-center\">\n                    <div className=\"card-header\"><h2>New Appointment</h2></div>\n                    <div className=\"card-body text-left\">\n                        <Container fluid>\n                            <form className=\"form\">\n\n                            <Row>\n                                <Col size=\"3\">Reason</Col>\n                                <Col size=\"8\"><input\n                                    value={this.state.reason}\n                                    name=\"reason\"\n                                    onChange={this.handleInputChange}\n                                    type=\"text\"\n                                    placeholder=\"Reason for this appointment\"\n                                /></Col>\n                            </Row>\n\n                                <Row>\n                                    <Col size=\"3\">Select a date and time</Col>\n                                    <Col size=\"8\"><CalendarAppt onChange={this.calendarChange}/></Col>\n                                </Row>\n                                <Row>\n                                    <Col size=\"3\">Upload your files here</Col>\n                                    <Col size=\"8\"><input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"/></Col>\n                                </Row>\n                                {/*<Row>*/}\n                                    {/*<Col size=\"3\">Video Appointment</Col>*/}\n                                    {/*<Col size=\"8\"><input*/}\n                                        {/*onChange={this.handleselectedOption}*/}\n                                        {/*type=\"radio\"*/}\n                                        {/*value=\"video\"*/}\n                                        {/*name=\"type\"*/}\n                                        {/*checked={this.state.type === \"video\"}*/}\n                                    {/*/></Col>*/}\n                                {/*</Row>*/}\n\n                                {/*<Row>*/}\n                                    {/*<Col size=\"3\">In-person Appointment</Col>*/}\n                                    {/*<Col size=\"8\"><input*/}\n                                        {/*onChange={this.handleselectedOption}*/}\n                                        {/*type=\"radio\"*/}\n                                        {/*value=\"inperson\"*/}\n                                        {/*name=\"type\"*/}\n                                        {/*checked={this.state.type === \"inperson\"}*/}\n                                    {/*/></Col>*/}\n                                {/*</Row>*/}\n                                <Row>\n                                    <Col size=\"3\">Select a doctor</Col>\n                                    <Col size=\"8\"><select onChange={this.handleDoctorOption}>\n                                        <option>Select Doctor</option>\n                                        {\n                                            this.props.doctors ? (\n                                                this.props.doctors.map((item, index) => {\n                                                    return (\n                                                        <option key={index}\n                                                                value={item.id}>{item.firstName} {item.lastName} - {item.doctype}</option>\n                                                    )\n                                                })\n                                            ) : null\n                                        }\n                                    </select></Col>\n                                </Row>\n                                <Row>\n                                    <Col size=\"3\">Duration</Col>\n                                    <Col size=\"8\">\n                                        <select onChange={this.handleDurationOption}>\n                                        <option value=\"30\">Select duration</option>\n                                        <option value=\"30\">30 min</option>\n                                        <option value=\"45\">45 min</option>\n                                        <option value=\"60\">60 min</option>\n                                    </select>\n                                    </Col>\n                                </Row>\n                                <div className=\"text-center\">\n                                    <button className=\"btn-primary\" onClick={this.handleFormSubmit}>Submit</button>\n                                </div>\n                        </form>\n                        </Container>\n                    </div>\n                {/* </Container> */}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default withRouter(Form);\n","import React from \"react\";\nimport \"./Footer.css\";\n\n// const footerStyle = {\n//     height: \"200px\",\n//     width: \"100%\"\n//   }\n// style={footerStyle}\n\n\nfunction Footer() {\n  return (\n    <div>\n    <footer className=\"page-footer font-small blue\">\n    <div className=\"footer-copyright text-center py-3\">© 2018 UCARE\n      {/* <a href=\"https://mdbootstrap.com/education/bootstrap/\"> MDBootstrap.com</a> */}\n    </div>\n  </footer> \n  </div>  \n\n\n\n  );\n}\n\nexport default Footer;\n\n\n\n","import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../../components/Grid/Grid\";\nimport NavHome from \"../../components/NavHome/NavHome\";\nimport FormAppt from \"../../components/FormAppt/FormAppt\";\nimport withAuth from '../../components/withAuth';\nimport \"./NewAppt.css\";\nimport Footer from \"../../components/Footer/Footer\"\n\n\n\nclass NewAppt extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            doctors: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"/api/doctors/\")\n            .then(response => response.json())\n            .then(data => {\n                this.setState({doctors: data});\n            });\n    }\n\n    render() {\n        return (\n            <div>\n            <NavHome/>\n\n                <Container fluid>\n                    <FormAppt doctors={this.state.doctors}/>\n                </Container>\n                <Footer />\n\n            </div>\n        )\n    }\n}\n\nexport default withAuth(NewAppt);\n","import {Col, Row} from \"../Grid/Grid\";\nimport React, { Component } from \"react\";\nimport AuthHelperMethods from '../../components/AuthHelperMethods';\n\nclass Sidebar extends Component {\n    Auth = new AuthHelperMethods();\n\n    render() {\n\n        return (\n            <Col size=\"2\">\n                <Row>\n                    <Col size=\"4\">\n                        <a className=\"list-group-item\" href={\"/patient/\" + this.Auth.getPatient().id + \"/tests\"}>\n                            <i className=\"fas fa-vials fa-2x\" aria-hidden=\"true\"></i>\n                            &nbsp;Tests</a>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"4\">\n                        <a className=\"list-group-item\" href={\"/patient/\" + this.Auth.getPatient().id + \"/medications\"}>\n                            <i className=\"fas fa-prescription fa-2x\" aria-hidden=\"true\"></i>\n                            &nbsp;Medications</a>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"4\">\n                        <a className=\"list-group-item\" href={\"/patient/\" + this.Auth.getPatient().id + \"/calendar\"}>\n                            <i className=\"fas fa-calendar-alt fa-2x\" aria-hidden=\"true\"></i>\n                            &nbsp;Calendar</a>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"4\">\n                        <a className=\"list-group-item\" href={\"/patient/\" + this.Auth.getPatient().id + \"/proxies\"}>\n                            <i className=\"fas fa-users-cog fa-2x\" aria-hidden=\"true\"></i>\n                            &nbsp;Proxies</a>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col size=\"4\">\n                        <a className=\"list-group-item\" href={\"/patient/\" + this.Auth.getPatient().id + \"/history\"}>\n                            <i className=\"fas fa-history fa-2x\" aria-hidden=\"true\"></i>\n                            &nbsp;Medical History</a>\n                    </Col>\n                </Row>\n            </Col>\n        )\n    }\n}\n\nexport default Sidebar;\n\n","import React from \"react\";\nimport Card from \"../../components/Card/Card\";\nimport { Col, Row, Container } from \"../../components/Grid/Grid\";\nimport List from \"../../components/List/List\";\nimport {Component} from \"react\";\nimport NavPatient from \"../../components/NavPatient/NavPatient\";\nimport \"./PatientFile.css\";\nimport AuthHelperMethods from \"../../components/AuthHelperMethods\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\n//import API from \"../utils/API\";\n\n//necessary for pulling patient name out of entered email\n/*const Auth = new AuthHelperMethods();\nvar currPatient = Auth.getConfirm().email.split(\"@\")[0];*/\n\n\nclass PatientFile extends Component {\n    Auth = new AuthHelperMethods();\n\n    render() {\n\n        return (\n            <div>\n                <NavPatient/>\n\n                <Container fluid>\n                    <Row>\n                        <Sidebar/>\n                        <Col size=\"8\">\n                            <Card heading={\"Medical History for \" + this.Auth.getPatient().firstName + \" \" + this.Auth.getPatient().lastName}>\n                                <table className=\"table\">\n                                    <thead>\n                                    <tr className=\"table-active\">\n                                        <th scope=\"col\">Date</th>\n                                        <th scope=\"col\">Reason</th>\n                                        <th scope=\"col\">In Person / Video</th>\n                                        <th scope=\"col\">Notes</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    <tr className=\"table bg-info\">\n                                        <th scope=\"row\">06/28/15</th>\n                                        <td>Rash</td>\n                                        <td>In-person</td>\n                                        <td>fill in later</td>\n                                    </tr>\n                                    <tr className=\"table bg-info\">\n                                        <th scope=\"row\">05/26/14</th>\n                                        <td>Rash</td>\n                                        <td>Video</td>\n                                        <td>fill in later</td>\n                                    </tr>\n                                    <tr className=\"table bg-primary\">\n                                        <th scope=\"row\">04/13/12</th>\n                                        <td>Depressive Episode</td>\n                                        <td>Video</td>\n                                        <td>done</td>\n                                    </tr>\n                                    <tr className=\"table bg-primary\">\n                                        <th scope=\"row\">04/13/12</th>\n                                        <td>Depressive Episode</td>\n                                        <td>Video</td>\n                                        <td>done</td>\n                                    </tr>\n                                    <tr className=\"table bg-primary\">\n                                        <th scope=\"row\">04/13/12</th>\n                                        <td>Depressive Episode</td>\n                                        <td>Video</td>\n                                        <td>done</td>\n                                    </tr>\n                                    <tr className=\"table-primary\">\n                                        <th scope=\"row\">01/12/10</th>\n                                        <td>Headache</td>\n                                        <td>Video</td>\n                                        <td>done</td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default PatientFile;\n\n\n\n","import React from \"react\";\nimport Card from \"../../components/Card/Card\";\nimport { Col, Row, Container } from \"../../components/Grid/Grid\";\nimport {Component} from \"react\";\nimport NavPatient from \"../../components/NavPatient/NavPatient\";\nimport \"./PatientTests.css\";\nimport AuthHelperMethods from \"../../components/AuthHelperMethods\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\n\n\nclass PatientTests extends Component {\n    Auth = new AuthHelperMethods();\n\n    render() {\n        return (\n            <div>\n                <NavPatient/>\n                <Container fluid>\n                    <Row>\n                        <Sidebar/>\n                        <Col size=\"8\">\n                            <Card heading={\"Tests History for \" + this.Auth.getPatient().firstName + \" \" + this.Auth.getPatient().lastName}>\n                                <table className=\"table\">\n                                    <thead>\n                                    <tr className=\"table-active\">\n                                        <th scope=\"col\">Date</th>\n                                        <th scope=\"col\">Reason</th>\n                                        <th scope=\"col\">Test Type</th>\n                                        <th scope=\"col\">Results</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    <tr className=\"table bg-info\">\n                                        <th scope=\"row\">02/12/15</th>\n                                        <td>Anemia</td>\n                                        <td>Blood cells count</td>\n                                        <td>Normal</td>\n                                    </tr>\n                                    <tr className=\"table bg-info\">\n                                        <th scope=\"row\">05/26/14</th>\n                                        <td>Pain</td>\n                                        <td>Cholesterol</td>\n                                        <td>High</td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default PatientTests;\n","import React from \"react\";\nimport Card from \"../../components/Card/Card\";\nimport { Col, Row, Container } from \"../../components/Grid/Grid\";\nimport {Component} from \"react\";\nimport NavPatient from \"../../components/NavPatient/NavPatient\";\nimport \"./PatientMedications.css\";\nimport AuthHelperMethods from \"../../components/AuthHelperMethods\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\n\n\nclass PatientMedications extends Component {\n    Auth = new AuthHelperMethods();\n\n    render() {\n        return (\n            <div>\n                <NavPatient/>\n                <Container fluid>\n                    <Row>\n                        <Sidebar/>\n                        <Col size=\"8\">\n                            <Card heading={\"Medications for \" + this.Auth.getPatient().firstName + \" \" + this.Auth.getPatient().lastName}>\n                                <table className=\"table\">\n                                    <thead>\n                                    <tr className=\"table-active\">\n                                        <th scope=\"col\">Date</th>\n                                        <th scope=\"col\">Reason</th>\n                                        <th scope=\"col\">Name</th>\n                                        <th scope=\"col\">Refils</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    <tr className=\"table-primary\">\n                                        <th scope=\"row\">08/21/18</th>\n                                        <td>Diarrhea</td>\n                                        <td>Loperamide</td>\n                                        <td>2</td>\n                                    </tr>\n                                    <tr className=\"table-primary\">\n                                        <th scope=\"row\">05/11/18</th>\n                                        <td>Depression</td>\n                                        <td>RedLabel</td>\n                                        <td>0.75</td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default PatientMedications;\n","import React from \"react\";\nimport Card from \"../../components/Card/Card\";\nimport { Col, Row, Container } from \"../../components/Grid/Grid\";\nimport {Component} from \"react\";\nimport NavPatient from \"../../components/NavPatient/NavPatient\";\nimport \"./PatientCalendar.css\";\nimport AuthHelperMethods from \"../../components/AuthHelperMethods\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\nimport API from \"../../utils/API\";\nimport Moment from \"react-moment\";\n\n\nclass PatientCalendar extends Component {\n    Auth = new AuthHelperMethods();\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            appointments: []\n        };\n    }\n\n    componentDidMount() {\n        console.log(this.Auth.getPatient());\n        API.getAppts(this.Auth.getPatient())\n            .then(response => {\n                console.log(response);\n                this.setState({appointments: response.data})\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <NavPatient/>\n                <Container fluid>\n                    <Row>\n                        <Sidebar/>\n                        <Col size=\"8\">\n                            <Card heading= {\"Appointments\"}>\n                                <Container fluid>\n                                    <Row className=\"row row-header\">\n                                        <Col size=\"2\"><strong>Date</strong></Col>\n                                        <Col size=\"3\"><strong>Reason</strong></Col>\n                                        <Col size=\"2\"><strong>Duration</strong></Col>\n                                        <Col size=\"2\"><strong>Video Call Link</strong></Col>\n                                        <Col size=\"2\"><strong>Doctor</strong></Col>\n                                    </Row>\n                                    {\n                                        this.state.appointments ? (\n\n                                            this.state.appointments.map((item, index) => {\n                                                return (\n                                                    <Row key={index} className=\"dark-nav\">\n                                                        <Col size=\"2\">\n                                                            <Moment format=\"LLLL\">{item.date}</Moment>\n                                                        </Col>\n                                                        <Col size=\"3\">\n                                                            {item.subject}\n                                                        </Col>\n                                                        <Col size=\"2\">\n                                                            {item.duration}\n                                                        </Col>\n                                                        <Col size=\"2\">\n                                                            <a href={item.skypeUrl} target=\"_blank\">Call</a>\n                                                        </Col>\n                                                        <Col size=\"2\">\n                                                            {item.Doctor.firstName} {item.Doctor.lastName}, {item.Doctor.doctype}\n                                                        </Col>\n\n                                                    </Row>\n\n                                                )\n                                            })\n                                        ) : null\n                                    }\n                                </Container>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default PatientCalendar;\n","import React from \"react\";\nimport Card from \"../../components/Card/Card\";\nimport { Col, Row, Container } from \"../../components/Grid/Grid\";\nimport {Component} from \"react\";\nimport NavPatient from \"../../components/NavPatient/NavPatient\";\nimport \"./PatientProxies.css\";\nimport AuthHelperMethods from \"../../components/AuthHelperMethods\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\n\n\nclass PatientProxies extends Component {\n    Auth = new AuthHelperMethods();\n\n    render() {\n        return (\n            <div>\n                <NavPatient/>\n                <Container fluid>\n                    <Row>\n                        <Sidebar/>\n                        <Col size=\"8\">\n                            <Card heading={\"Proxies \" + this.Auth.getPatient().firstName + \" \" + this.Auth.getPatient().lastName}>\n                                <table className=\"table\">\n                                    <thead>\n                                    <tr className=\"table-active\">\n                                        <th scope=\"col\">Firstname</th>\n                                        <th scope=\"col\">Lastname</th>\n                                        <th scope=\"col\">Phone</th>\n                                        <th scope=\"col\">Email</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    <tr className=\"table bg-info\">\n                                        <td scope=\"row\">Gisele</td>\n                                        <td>Bundchen</td>\n                                        <td>(310) 555-2134</td>\n                                        <td>gisele@yahoo.com</td>\n                                    </tr>\n                                    <tr className=\"table bg-info\">\n                                        <td scope=\"row\">Tom</td>\n                                        <td>Hanks</td>\n                                        <td>(424)872-1731</td>\n                                        <td>handsome@gmail.cpom</td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default PatientProxies;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home/Home\";\nimport SignUp from \"./pages/SignUp/SignUp\";\nimport DoctorProfile from \"./pages/DoctorProfile/DoctorProfile\";\nimport PatientList from \"./pages/PatientList/PatientList\";\nimport PatientProfile from \"./pages/PatientProfile/PatientProfile\";\nimport NewAppt from \"./pages/NewAppt/NewAppt\";\nimport PatientFile from \"./pages/PatientFile/PatientFile\";\nimport Search from \"./pages/SearchResults/SearchResults\";\n\nimport PatientTests from \"./pages/PatientTests/PatientTests\";\nimport PatientMedications from \"./pages/PatientMedications/PatientMedications\";\nimport PatientCalendar from \"./pages/PatientCalendar/PatientCalendar\";\nimport PatientProxies from \"./pages/PatientProxies/PatientProxies\";\n\n\nfunction App() {\n  return (\n    <Router>\n     <div>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/doctor\" component={DoctorProfile} />\n          <Route exact path=\"/patientlist\" component={PatientList} />\n          <Route exact path=\"/patient\" component={PatientProfile} />\n          <Route exact path=\"/newappt\" component={NewAppt} />\n          <Route exact path=\"/patient/:id\" component={PatientFile} />\n            <Route exact path=\"/patient/:id/tests\" component={PatientTests} />\n            <Route exact path=\"/patient/:id/medications\" component={PatientMedications} />\n            <Route exact path=\"/patient/:id/calendar\" component={PatientCalendar} />\n            <Route exact path=\"/patient/:id/proxies\" component={PatientProxies} />\n            <Route exact path=\"/patient/:id/history\" component={PatientFile} />\n          <Route exact path=\"/search\" component={Search} />\n\n        </Switch>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.8e333231.png\";","module.exports = __webpack_public_path__ + \"static/media/case3.5c2cb719.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.8e333231.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.8e333231.png\";","module.exports = __webpack_public_path__ + \"static/media/ins2.4b5b9f81.png\";"],"sourceRoot":""}